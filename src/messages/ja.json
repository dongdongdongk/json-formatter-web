{
  "nav": {
    "logo": "JSONフォーマッター",
    "home": "ホーム",
    "about": "概要",
    "guide": "ガイド",
    "faq": "FAQ"
  },
  "hero": {
    "title": "JSONフォーマッターとTypeScriptインターフェースジェネレーター",
    "subtitle": "圧縮されたJSONを美しくフォーマットし、TypeScriptインターフェースを自動生成します。\n開発者のための必須ツールです。",
    "features": {
      "validation": {
        "title": "🎯 リアルタイム検証",
        "description": "JSON構文エラーを即座に検証し、正確な位置を表示します。"
      },
      "generation": {
        "title": "⚡ 自動生成",
        "description": "JSON構造を分析してTypeScriptインターフェースを自動生成します。"
      },
      "copy": {
        "title": "📋 ワンクリックコピー",
        "description": "フォーマットされたJSONと生成されたインターフェースをワンクリックでコピーできます。"
      }
    }
  },
  "formatter": {
    "title": "JSONフォーマッターとインターフェースジェネレーター",
    "input": {
      "title": "JSON入力",
      "placeholder": "JSONデータを入力してください..."
    },
    "output": {
      "json": "フォーマットされたJSON",
      "interface": "TypeScriptインターフェース",
      "jsonPlaceholder": "フォーマットされたJSONがここに表示されます。",
      "interfacePlaceholder": "TypeScriptインターフェースがここに生成されます。",
      "copy": "コピー",
      "interfaceName": "インターフェース名"
    }
  },
  "about": {
    "meta": {
      "title": "JSONフォーマッター概要 | 開発者のためのツール",
      "description": "JSONフォーマッターとTypeScriptインターフェースジェネレーターの開発背景と主要機能をご紹介します。"
    },
    "hero": {
      "title": "JSONフォーマッターとTypeScriptインターフェースジェネレーター",
      "subtitle": "開発者の生産性を向上させる必須ツール"
    },
    "intro": {
      "title": "🎯 サービス紹介",
      "description": "JSONフォーマッターは、開発者がJSONデータをより簡単に扱えるようにするWebアプリケーションです。圧縮されたJSONを読みやすい形式にフォーマットし、TypeScriptインターフェースを自動生成して開発効率を最大化します。"
    },
    "features": {
      "title": "🚀 主要機能",
      "formatting": {
        "title": "JSONフォーマットと検証",
        "items": [
          "圧縮されたJSONを美しく整理",
          "リアルタイムJSON検証",
          "構文エラー位置の正確な表示"
        ]
      },
      "typescript": {
        "title": "TypeScriptインターフェース自動生成",
        "items": [
          "JSON構造を分析して型定義を生成",
          "ネストしたオブジェクトと配列型を正確に処理",
          "オプションフィールドの自動検出",
          "インターフェース名のカスタマイズ"
        ]
      },
      "convenience": {
        "title": "便利な機能",
        "items": [
          "ワンクリックコピー機能",
          "リアルタイム処理",
          "レスポンシブデザイン",
          "ダーク/ライトモード対応"
        ]
      }
    },
    "background": {
      "title": "💡 開発背景",
      "paragraph1": "バックエンドAPI開発とフロントエンド開発においてJSONデータを扱うことは非常に頻繁です。特にTypeScriptを使用するプロジェクトでは、APIレスポンスデータの型定義が必須です。",
      "paragraph2": "しかし、毎回手動でJSON構造を分析してTypeScriptインターフェースを書くのは時間がかかり、ミスが起きやすいものです。このような反復的な作業を自動化して開発者の生産性を向上させるために、このツールを開発しました。"
    },
    "differentiators": {
      "title": "🎨 差別化要因",
      "userFriendly": {
        "title": "ユーザーフレンドリーなインターフェース",
        "description": "直感的で清潔なデザインで誰でも簡単に使用できます。"
      },
      "realtime": {
        "title": "リアルタイム処理",
        "description": "入力と同時に結果が表示され、素早いフィードバックを得られます。"
      },
      "free": {
        "title": "完全無料",
        "description": "登録なしですべての機能を無料で使用できます。"
      }
    },
    "techStack": {
      "title": "🔧 技術スタック"
    }
  },
  "guide": {
    "meta": {
      "title": "JSONフォーマッター使用ガイド | 使用法とヒント",
      "description": "JSONフォーマッターとTypeScriptインターフェースジェネレーターの詳細な使用法と実用的なヒントをご確認ください。"
    },
    "hero": {
      "title": "ユーザーガイド",
      "subtitle": "JSONフォーマッターを効果的に使用する方法を学ぶ"
    },
    "quickStart": {
      "title": "🚀 クイックスタート",
      "steps": [
        {
          "title": "JSONデータの入力",
          "description": "左側の入力欄にフォーマットしたいJSONデータを貼り付けるか直接入力してください。"
        },
        {
          "title": "リアルタイム結果確認",
          "description": "入力と同時に右側にフォーマットされたJSONとTypeScriptインターフェースが自動生成されます。"
        },
        {
          "title": "結果のコピー",
          "description": "各エリアの「コピー」ボタンをクリックして、フォーマットされたJSONやTypeScriptインターフェースをクリップボードにコピーしてください。"
        }
      ]
    },
    "features": {
      "title": "💡 主要機能の詳細説明",
      "jsonFormatting": {
        "title": "1. JSONフォーマットと検証",
        "formatting": {
          "title": "フォーマット",
          "description": "圧縮されたJSONを読みやすい形式に整理します。",
          "inputExample": "入力例",
          "outputExample": "出力例"
        },
        "validation": {
          "title": "リアルタイム検証",
          "description": "JSON構文エラーをリアルタイムで確認し、エラー位置を表示します。",
          "items": [
            "欠落した引用符の検出",
            "誤ったカンマ位置の確認",
            "括弧の不一致チェック"
          ]
        }
      },
      "typescript": {
        "title": "2. TypeScriptインターフェース生成",
        "autoInference": {
          "title": "自動型推論",
          "description": "JSON構造を分析して適切なTypeScript型を自動生成します。",
          "jsonInput": "JSON入力",
          "generatedInterface": "生成されたインターフェース"
        },
        "customization": {
          "title": "インターフェース名のカスタマイズ",
          "description": "生成されるインターフェースの名前を任意に変更できます。",
          "items": [
            "デフォルト: \"MyInterface\"",
            "リアルタイム名前変更可能",
            "PascalCase推奨"
          ]
        }
      }
    }
  },
  "faq": {
    "meta": {
      "title": "JSONフォーマッター FAQ | よくある質問",
      "description": "JSONフォーマッター使用中のよくある質問と回答、問題解決方法をご確認ください。"
    },
    "hero": {
      "title": "よくある質問",
      "subtitle": "JSONフォーマッターの使用に関する一般的な質問を確認してください"
    },
    "categories": {
      "all": "すべて",
      "general": "一般",
      "technical": "技術的",
      "troubleshooting": "トラブルシューティング"
    },
    "questions": {
      "1": {
        "question": "JSONフォーマッターは無料で使用できますか？",
        "answer": "はい、完全に無料です。登録なしですべての機能を無制限に使用できます。"
      },
      "2": {
        "question": "入力したJSONデータはどこに保存されますか？",
        "answer": "入力したデータはブラウザでのみ処理され、サーバーに送信されません。ページを更新するとすべてのデータが削除されます。"
      },
      "3": {
        "question": "最大どのくらい大きなJSONファイルを処理できますか？",
        "answer": "ブラウザのメモリ制限に依存しますが、一般的に10MB以下のJSONファイルを推奨します。より大きなファイルの場合、ブラウザが遅くなる可能性があります。"
      },
      "4": {
        "question": "TypeScriptインターフェースが正確でない場合がありますか？",
        "answer": "はい、いくつかの制限があります。配列の場合、最初の要素の型を基準に推論するため、異なる型が混在する配列は正確でない場合があります。また、null値が含まれる場合、オプション型として処理されない場合があります。"
      },
      "5": {
        "question": "生成されたTypeScriptインターフェースを修正できますか？",
        "answer": "現在のバージョンでは、自動生成されたインターフェースを直接修正することはできません。コピー後、コードエディターで必要に応じて修正してください。"
      },
      "6": {
        "question": "JSON構文エラーが発生した場合、どのように解決しますか？",
        "answer": "一般的なJSON構文エラーには以下があります：1) 文字列には二重引用符を使用 2) 最後の要素の後のカンマを削除 3) 括弧のペアを合わせる 4) コメントの削除。エラーメッセージを参考に該当位置を確認してください。"
      },
      "7": {
        "question": "コピー機能が動作しません。",
        "answer": "ブラウザのクリップボード権限が必要です。HTTPS接続でのみ正常に動作し、一部の古いブラウザではサポートされない場合があります。手動で選択してコピーしてください。"
      },
      "8": {
        "question": "モバイルでも使用できますか？",
        "answer": "はい、レスポンシブデザインでモバイルブラウザでも使用できます。ただし、大きなJSONファイルの場合、モバイル性能の制限で遅くなる可能性があります。"
      },
      "9": {
        "question": "ダークモードをサポートしていますか？",
        "answer": "現在、システム設定に応じたダークモードをサポートしています。今後、手動切り替え機能を追加予定です。"
      },
      "10": {
        "question": "特殊文字や絵文字が含まれたJSONも処理できますか？",
        "answer": "はい、UTF-8エンコーディングをサポートしているため、日本語、特殊文字、絵文字が含まれたJSONも正常に処理されます。"
      },
      "11": {
        "question": "非常に深くネストしたオブジェクトでもTypeScriptインターフェースが生成されますか？",
        "answer": "はい、ネストの深さに制限はありませんが、あまりに深いネストは可読性が落ちる可能性があります。必要に応じて別のインターフェースに分離することを推奨します。"
      },
      "12": {
        "question": "ブラウザの互換性はどうですか？",
        "answer": "モダンブラウザ（Chrome、Firefox、Safari、Edge）ですべて使用可能です。Internet Explorerはサポートしていません。"
      }
    },
    "contact": {
      "title": "追加のお問い合わせがございますか？",
      "description": "上記のFAQで解決されない問題がございましたら、GitHub Issuesを通じてお問い合わせください。"
    }
  },
  "footer": {
    "copyright": "© 2024 JSONフォーマッター。すべての権利を保有。",
    "description": "開発者ツールをより簡単にするプロジェクト"
  }
}