{
  "nav": {
    "logo": "JSON 포맷터",
    "home": "홈",
    "about": "소개",
    "guide": "사용법",
    "faq": "FAQ"
  },
  "hero": {
    "title": "JSON 포맷터 & TypeScript 인터페이스 생성기",
    "subtitle": "압축된 JSON을 깔끔하게 정리하고, TypeScript 인터페이스를 자동으로 생성하세요.\n개발자를 위한 필수 도구입니다.",
    "features": {
      "validation": {
        "title": "🎯 실시간 검증",
        "description": "JSON 구문 오류를 즉시 확인하고 정확한 위치를 표시합니다."
      },
      "generation": {
        "title": "⚡ 자동 생성",
        "description": "JSON 구조를 분석하여 TypeScript 인터페이스를 자동으로 생성합니다."
      },
      "copy": {
        "title": "📋 원클릭 복사",
        "description": "포맷된 JSON과 생성된 인터페이스를 클릭 한 번으로 복사할 수 있습니다."
      }
    }
  },
  "formatter": {
    "title": "JSON 포맷터 & 인터페이스 생성기",
    "input": {
      "title": "JSON 입력",
      "placeholder": "JSON 데이터를 입력하세요..."
    },
    "output": {
      "json": "포맷된 JSON",
      "interface": "TypeScript 인터페이스",
      "jsonPlaceholder": "포맷된 JSON이 여기에 표시됩니다.",
      "interfacePlaceholder": "TypeScript 인터페이스가 여기에 생성됩니다.",
      "copy": "복사",
      "interfaceName": "인터페이스 이름"
    }
  },
  "about": {
    "meta": {
      "title": "JSON 포맷터 소개 | 개발자를 위한 도구",
      "description": "JSON 포맷터와 TypeScript 인터페이스 생성기의 개발 배경과 주요 기능을 소개합니다."
    },
    "hero": {
      "title": "JSON 포맷터 & TypeScript 인터페이스 생성기",
      "subtitle": "개발자의 생산성을 높이는 필수 도구"
    },
    "intro": {
      "title": "🎯 서비스 소개",
      "description": "JSON 포맷터는 개발자들이 자주 사용하는 JSON 데이터를 보다 쉽게 다룰 수 있도록 도와주는 웹 애플리케이션입니다. 압축된 JSON을 읽기 쉽게 포맷하고, TypeScript 인터페이스를 자동으로 생성하여 개발 효율성을 극대화합니다."
    },
    "features": {
      "title": "🚀 주요 기능",
      "formatting": {
        "title": "JSON 포맷팅 및 검증",
        "items": [
          "압축된 JSON을 깔끔하게 정리",
          "실시간 JSON 유효성 검사",
          "구문 오류 위치 정확히 표시"
        ]
      },
      "typescript": {
        "title": "TypeScript 인터페이스 자동 생성",
        "items": [
          "JSON 구조 분석하여 타입 정의 생성",
          "중첩 객체, 배열 타입 정확히 처리",
          "옵셔널 필드 자동 감지",
          "인터페이스 이름 커스터마이징"
        ]
      },
      "convenience": {
        "title": "편의 기능",
        "items": [
          "원클릭 복사 기능",
          "실시간 처리",
          "반응형 디자인",
          "다크/라이트 모드 지원"
        ]
      }
    },
    "background": {
      "title": "💡 개발 배경",
      "paragraph1": "백엔드 API 개발과 프론트엔드 개발을 하면서 JSON 데이터를 다루는 일이 매우 빈번합니다. 특히 TypeScript를 사용하는 프로젝트에서는 API 응답 데이터에 대한 타입 정의가 필수적입니다.",
      "paragraph2": "하지만 매번 수동으로 JSON 구조를 분석하고 TypeScript 인터페이스를 작성하는 것은 시간이 많이 걸리고 실수가 발생하기 쉽습니다. 이러한 반복적인 작업을 자동화하여 개발자의 생산성을 높이고자 이 도구를 개발하게 되었습니다."
    },
    "differentiators": {
      "title": "🎨 차별화 포인트",
      "userFriendly": {
        "title": "사용자 친화적 인터페이스",
        "description": "직관적이고 깔끔한 디자인으로 누구나 쉽게 사용할 수 있습니다."
      },
      "realtime": {
        "title": "실시간 처리",
        "description": "입력과 동시에 결과가 표시되어 빠른 피드백을 받을 수 있습니다."
      },
      "free": {
        "title": "완전 무료",
        "description": "회원가입 없이 모든 기능을 무료로 사용할 수 있습니다."
      }
    },
    "techStack": {
      "title": "🔧 기술 스택"
    }
  },
  "guide": {
    "meta": {
      "title": "JSON 포맷터 사용 가이드 | 사용법과 팁",
      "description": "JSON 포맷터와 TypeScript 인터페이스 생성기의 상세한 사용법과 실무 활용 팁을 확인하세요."
    },
    "hero": {
      "title": "사용 가이드",
      "subtitle": "JSON 포맷터를 효과적으로 활용하는 방법을 알아보세요"
    },
    "quickStart": {
      "title": "🚀 빠른 시작",
      "steps": [
        {
          "title": "JSON 데이터 입력",
          "description": "좌측 입력창에 포맷하고 싶은 JSON 데이터를 붙여넣거나 직접 입력하세요."
        },
        {
          "title": "실시간 결과 확인",
          "description": "입력과 동시에 우측에 포맷된 JSON과 TypeScript 인터페이스가 자동으로 생성됩니다."
        },
        {
          "title": "결과 복사",
          "description": "각 영역의 '복사' 버튼을 클릭하여 포맷된 JSON이나 TypeScript 인터페이스를 클립보드에 복사하세요."
        }
      ]
    },
    "features": {
      "title": "💡 주요 기능 상세 설명",
      "jsonFormatting": {
        "title": "1. JSON 포맷팅 및 검증",
        "formatting": {
          "title": "포맷팅",
          "description": "압축된 JSON을 읽기 쉬운 형태로 정리합니다.",
          "inputExample": "입력 예시",
          "outputExample": "출력 예시"
        },
        "validation": {
          "title": "실시간 검증",
          "description": "JSON 구문 오류를 실시간으로 확인하고 오류 위치를 표시합니다.",
          "items": [
            "누락된 따옴표 감지",
            "잘못된 쉼표 위치 확인",
            "괄호 불일치 검사"
          ]
        }
      },
      "typescript": {
        "title": "2. TypeScript 인터페이스 생성",
        "autoInference": {
          "title": "자동 타입 추론",
          "description": "JSON 구조를 분석하여 적절한 TypeScript 타입을 자동으로 생성합니다.",
          "jsonInput": "JSON 입력",
          "generatedInterface": "생성된 인터페이스"
        },
        "customization": {
          "title": "인터페이스 이름 커스터마이징",
          "description": "생성될 인터페이스의 이름을 원하는 대로 변경할 수 있습니다.",
          "items": [
            "기본값: \"MyInterface\"",
            "실시간 이름 변경 가능",
            "PascalCase 권장"
          ]
        }
      }
    }
  },
  "faq": {
    "meta": {
      "title": "JSON 포맷터 FAQ | 자주 묻는 질문",
      "description": "JSON 포맷터 사용 중 자주 묻는 질문과 답변, 문제 해결 방법을 확인하세요."
    },
    "hero": {
      "title": "자주 묻는 질문",
      "subtitle": "JSON 포맷터 사용 중 궁금한 점들을 확인해보세요"
    },
    "categories": {
      "all": "전체",
      "general": "일반",
      "technical": "기술적 질문",
      "troubleshooting": "문제 해결"
    },
    "questions": {
      "1": {
        "question": "JSON 포맷터는 무료로 사용할 수 있나요?",
        "answer": "네, 완전히 무료입니다. 회원가입 없이 모든 기능을 무제한으로 사용할 수 있습니다."
      },
      "2": {
        "question": "입력한 JSON 데이터는 어디에 저장되나요?",
        "answer": "입력한 데이터는 브라우저에서만 처리되며, 서버로 전송되지 않습니다. 페이지를 새로고침하면 모든 데이터가 삭제됩니다."
      },
      "3": {
        "question": "최대 얼마나 큰 JSON 파일을 처리할 수 있나요?",
        "answer": "브라우저의 메모리 제한에 따라 달라지지만, 일반적으로 10MB 이하의 JSON 파일을 권장합니다. 더 큰 파일의 경우 브라우저가 느려질 수 있습니다."
      },
      "4": {
        "question": "TypeScript 인터페이스가 정확하지 않게 생성되는 경우가 있나요?",
        "answer": "네, 몇 가지 제한사항이 있습니다. 배열의 경우 첫 번째 요소의 타입을 기준으로 추론하므로, 다양한 타입이 섞인 배열은 정확하지 않을 수 있습니다. 또한 null 값이 포함된 경우 옵셔널 타입으로 처리되지 않을 수 있습니다."
      },
      "5": {
        "question": "생성된 TypeScript 인터페이스를 수정할 수 있나요?",
        "answer": "현재 버전에서는 자동 생성된 인터페이스를 직접 수정할 수 없습니다. 복사 후 코드 에디터에서 필요에 따라 수정해주세요."
      },
      "6": {
        "question": "JSON 구문 오류가 발생하는데 어떻게 해결하나요?",
        "answer": "일반적인 JSON 구문 오류는 다음과 같습니다: 1) 문자열에 큰따옴표 사용 2) 마지막 요소 뒤 쉼표 제거 3) 괄호 짝 맞추기 4) 주석 제거. 오류 메시지를 참고하여 해당 위치를 확인해보세요."
      },
      "7": {
        "question": "복사 기능이 작동하지 않아요.",
        "answer": "브라우저의 클립보드 권한이 필요합니다. HTTPS 연결에서만 정상 작동하며, 일부 구형 브라우저에서는 지원되지 않을 수 있습니다. 수동으로 선택하여 복사해주세요."
      },
      "8": {
        "question": "모바일에서도 사용할 수 있나요?",
        "answer": "네, 반응형 디자인으로 모바일 브라우저에서도 사용할 수 있습니다. 다만 큰 JSON 파일의 경우 모바일 성능 제한으로 느려질 수 있습니다."
      },
      "9": {
        "question": "다크 모드를 지원하나요?",
        "answer": "현재 시스템 설정에 따른 다크 모드를 지원합니다. 향후 수동 전환 기능을 추가할 예정입니다."
      },
      "10": {
        "question": "특수 문자나 이모지가 포함된 JSON도 처리할 수 있나요?",
        "answer": "네, UTF-8 인코딩을 지원하므로 한글, 특수 문자, 이모지가 포함된 JSON도 정상적으로 처리됩니다."
      },
      "11": {
        "question": "중첩된 객체가 매우 깊은 경우에도 TypeScript 인터페이스가 생성되나요?",
        "answer": "네, 중첩 깊이에 제한은 없지만, 너무 깊은 중첩은 가독성이 떨어질 수 있습니다. 필요에 따라 별도의 인터페이스로 분리하는 것을 권장합니다."
      },
      "12": {
        "question": "브라우저 호환성은 어떻게 되나요?",
        "answer": "모던 브라우저(Chrome, Firefox, Safari, Edge)에서 모두 사용 가능합니다. Internet Explorer는 지원하지 않습니다."
      }
    },
    "contact": {
      "title": "추가 문의사항이 있으신가요?",
      "description": "위 FAQ에서 해결되지 않은 문제가 있으시면, GitHub Issues를 통해 문의해주세요."
    }
  },
  "footer": {
    "copyright": "© 2024 JSON 포맷터. 모든 권리 보유.",
    "description": "개발자 도구를 더 쉽게 만들어가는 프로젝트"
  }
}